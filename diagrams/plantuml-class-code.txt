@startuml

' Clases

class Jugador <<Entity>> {
  -nombre: String
  --
  +setNombre(nombre: String): void
  +getNombre(): String
}

class Equipo <<Entity>> {
  -nombre: String
  -jugadores: List<Jugador>
  --
  +setNombre(nombre: String): void
  +getNombre(): String
  +setJugadores(lista: List<Jugador>): void
  +getJugadores: List<Jugador>
  +agregarJugador(jugador: Jugador): boolean
  +borrarJugador(jugador: Jugador): boolean
}

class Torneo <<Entity>> {
  -nombre: String
  -equipos: List<Equipo>
  -emparejamientos: List<List<Partida>>
  -clasificados: List<Equipo>
  -ganador: Equipo
  --
  + getNombre(): String
  + setNombre(nombre: String): void
  + getEquipos(): List<Equipo>
  + setEquipos(equipos: List<Equipo>): void
  + getEmparejamientos(): List<List<Partida>>
  + setEmparejamientos(emparejamientos: List<List<Partida>>): void
  + getClasificados(): List<Equipo>
  + setClasificados(clasificados: List<Equipo>): void
  + getGanador(): Equipo
  + setGanador(ganador: Equipo): void
}

class Partida <<Entity>> {
  - equipos: List<Equipo>
  - resultado: Map<Equipo, Integer>
  - ganador: Equipo
  --
  + getEquipos(): List<Equipo>
  + setEquipos(equipos: List<Equipo>): void
  + getResultado(): Map<Equipo, Integer>
  + setResultado(resultado: Map<Equipo, Integer>): void
  + getGanador(): Equipo
  + setGanador(ganador: Equipo): void
  + toString(): String
  + agregaEquipo(equipo: Equipo): boolean
  + eliminaEquipo(equipo: Equipo): boolean
  + ajustaResultado(nombreEquipo: String, puntos: Integer): boolean
}

class GestionTorneos <<Controller>> {
  - instancia: GestionTorneos
  - torneos: List<Torneo>
  - equipos: List<Equipo>
  - jugadores: List<Jugador>
  --
  + getInstance(): GestionTorneos
  + getTorneos(): List<Torneo>
  + setTorneos(torneos: List<Torneo>): void
  + crearUnTorneo(torneo: Torneo): boolean
  + inscribirEquipoEnTorneo(equipo: Equipo, torneo: Torneo): boolean
  + generaEmparejamientos(torneo: Torneo): boolean
  + agregaJugador(jugador: Jugador): boolean
  + agregaJugadorAEquipo(jugador: Jugador, equipo: Equipo): boolean
  + agregarEquipo(equipo: Equipo): boolean
  + registrarResultadoPartida(torneo: Torneo, partida: Partida, ganador: Equipo): boolean
  + actualizaClasificacionTorneo(torneo: Torneo): boolean
}

class Menu <<View>> {
  + entradaTeclado: Scanner
  + GestionTorneos: gestionTorneos
  --
  + procesarMenu(): void
  + procesarSubmenuTorneos(): void
  + procesarSubmenuEquipos(): void
  + procesarSubmenuJugadores(): void
  + procesarSubmenuResultados(): void
}

' Relaciones

Menu --> GestionTorneos : usa

GestionTorneos "1" o-- "*" Torneo : gestiona
GestionTorneos "1" o-- "*" Equipo : gestiona
GestionTorneos "1" o-- "*" Jugador : gestiona

Equipo "1" o-- "*" Jugador : tiene

Torneo "1" o-- "*" Equipo : tiene
Torneo "1" *-- "*" Partida : contiene

Partida "2" o-- "*" Equipo : tiene

@enduml